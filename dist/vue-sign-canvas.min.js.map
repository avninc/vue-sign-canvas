{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-sign-canvas.min.js","webpack:///webpack/bootstrap 289599a81a4aae1e1994","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/core-js/library/modules/_object-pie.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/core-js/library/modules/_wks-define.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/_wks-ext.js","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/core-js/library/modules/_object-gopn.js","webpack:///./node_modules/core-js/library/modules/_object-gopd.js","webpack:///./node_modules/.1.1.3@color-name/index.js","webpack:///./node_modules/.1.9.1@color-convert/conversions.js","webpack:///./src/app.js","webpack:///./src/App.vue","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///src/App.vue","webpack:///./node_modules/babel-runtime/core-js/object/assign.js","webpack:///./node_modules/core-js/library/fn/object/assign.js","webpack:///./node_modules/core-js/library/modules/es6.object.assign.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/_object-assign.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/.2.0.0-rc.3@fabric/dist/fabric.js","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/.9.12.0@jsdom/lib/jsdom/living/generated/utils.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/babel-runtime/core-js/object/get-prototype-of.js","webpack:///./node_modules/core-js/library/fn/object/get-prototype-of.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack:///./node_modules/babel-runtime/core-js/symbol.js","webpack:///./node_modules/core-js/library/fn/symbol/index.js","webpack:///./node_modules/core-js/library/modules/es6.symbol.js","webpack:///./node_modules/core-js/library/modules/_meta.js","webpack:///./node_modules/core-js/library/modules/_enum-keys.js","webpack:///./node_modules/core-js/library/modules/_is-array.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.observable.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./node_modules/babel-runtime/core-js/object/define-property.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-names.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-names.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-names.js","webpack:///./node_modules/.2.0.1@color/index.js","webpack:///./node_modules/.1.5.2@color-string/index.js","webpack:///./node_modules/.0.2.2@simple-swizzle/index.js","webpack:///./node_modules/.0.3.1@is-arrayish/index.js","webpack:///./node_modules/.1.9.1@color-convert/index.js","webpack:///./node_modules/.1.9.1@color-convert/route.js","webpack:///./src/App.vue?34bf"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","core","version","__e","global","window","Math","Function","__g","store","uid","Symbol","USE_SYMBOL","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","P","Attributes","e","TypeError","value","a","it","key","IObject","defined","createDesc","exec","ctx","hide","$export","type","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","target","undefined","C","b","arguments","length","apply","virtual","R","U","isObject","bitmap","writable","$keys","enumBugKeys","keys","id","px","random","concat","toString","propertyIsEnumerable","fn","val","valueOf","slice","ceil","floor","isNaN","shared","split","getOwnPropertySymbols","def","has","TAG","tag","stat","fails","KEY","exp","LIBRARY","wksExt","$Symbol","charAt","document","is","createElement","toIObject","arrayIndexOf","IE_PROTO","names","result","push","cof","redefine","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","returnThis","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","dPs","Empty","createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","open","write","lt","close","create","Properties","toObject","ObjectProto","constructor","gOPN","windowNames","getOwnPropertyNames","getWindowNames","hiddenKeys","pIE","gOPD","getOwnPropertyDescriptor","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","comparativeDistance","x","y","pow","cssKeywords","reverseKeywords","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","model","Error","h","r","g","min","max","delta","v","w","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","z","t1","t2","t3","sv","smin","lmin","hi","q","t","sl","vmin","wh","bl","ratio","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","args","round","ansi","color","mult","rem","integer","string","toUpperCase","substring","match","colorString","map","char","join","parseInt","grayscale","hue","chroma","pure","mg","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__App_vue__","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_dce02452_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__","normalizeComponent","__vue_styles__","Component","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","options","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","existing","beforeCreate","_injectStyles","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default","__WEBPACK_IMPORTED_MODULE_1_fabric__","__WEBPACK_IMPORTED_MODULE_2_color__","__WEBPACK_IMPORTED_MODULE_2_color___default","props","data","__canvas","save","$emit","toDataURL","clear","init","canvas","newOptions","width","screen","availWidth","height","availHeight","brushColor","brushWidth","setWidth","setHeight","freeDrawingBrush","shadowEnable","shadow","Shadow","blur","shadowWidth","offsetX","offsetY","affectStroke","shadowColor","fade","watch","console","log","mounted","Canvas","isDrawingMode","transparentCorners","assign","aFunction","that","getKeys","gOPS","$assign","A","K","forEach","T","aLen","index","getSymbols","isEnum","j","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","toInteger","Buffer","resizeCanvasIfNeeded","pipelineState","targetCanvas","dWidth","destinationWidth","dHeight","destinationHeight","copyGLTo2DDrawImage","gl","glCanvas","getContext","translate","scale","sourceY","drawImage","copyGLTo2DPutImageData","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","fabric","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","defaultView","DOMParser","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","initFilterBackend","isWebglSupported","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","prop","on","stopObserving","fire","listenersForEvent","len","filter","Observable","off","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","nonSplicing","objects","getObjects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","_setObject","obj","_set","toggle","abs","PiBy180","removeFromArray","idx","getRandomInt","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","rotateVector","Point","addEquals","vector","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","left","top","invertTransform","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","camelize","resolveNamespace","getSvgAttributes","attributes","parts","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","loadImageInDom","div","position","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","drawDashedLine","da","dx","dy","rot","dc","di","draw","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","angle","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","scaleMatrix","resetObjectTransform","flipX","flipY","String","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","pop","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","py","rx2","ry2","py2","px2","pl","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","Array","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","invoke","method","byProperty","find","value1","value2","condition","extend","deep","Element","clone","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","graphemeSplit","textstring","chr","graphemes","getWholeChar","str","code","charCodeAt","prev","Subclass","callSuper","methodName","parentMethod","_this","superclass","superClassMethod","createClass","klass","initialize","shift","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","areHostMethods","methodNames","test","createListener","wrappedHandler","createWrappedHandler","getElement","event","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","getElementById","makeElement","tagName","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","replaceChild","docElement","body","scrollLeft","scrollTop","host","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","err","arr","getComputedStyle","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","request","onComplete","xhr","makeXHR","parameters","setRequestHeader","send","factories","ActiveXObject","XMLHttpRequest","warn","noop","animate","requestAnimFrame","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","_requestAnimFrame","cancelAnimFrame","_cancelAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","clearTimeout","calculateColor","begin","end","pos","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","colorEasing","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","isArray","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_setStrokeFillOpacity","colorAttributes","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","parseStyleString","oStyle","chunk","pair","trim","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","classNames","getAttribute","elementById","node","nodelist","parseUseDirectives","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","svgViewBoxElementsRegEx","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","hasAncestorWithNodeName","svgValidTagNames","svgViewBoxElements","svgInvalidAncestors","svgValidParents","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","svgValidTagNamesRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewMatrix","commaWsp","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","operation","combinedMatrix","parseSVGDocument","parsingOptions","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","ElementsParser","parse","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","_source","toRgb","toHsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","gradientTransform","addColorStop","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","maxRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","repeat","setOptions","NUM_FRACTION_DIGITS","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","includeDefaultValues","_parseShadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setDimensions","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","_renderBackground","_renderObjects","drawControls","_renderOverlay","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","_char","charIndex","fontList","_setSVGObject","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","impl","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","_setBrushStyles","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_setShadow","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","_setCursorFromEvent","checkClick","which","button","cursorOffset","mr","mb","ml","cursorMap","_bindEvents","_onResize","_onMouseDown","_onDoubleClick","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","passive","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBinded","_onMouseUp","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","_handleEvent","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_isCurrentlyDrawing","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","_fireOverOutEvents","overOpt","outOpt","hoveredTarget","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","lockRotation","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","supportQuality","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","zoomX","capped","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","cacheTranslationX","cacheTranslationY","_transformDone","calcOwnMatrix","_removeDefaultValues","scaling","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","patternTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","skipAbsolute","_setCornerCoords","_calcRotateMatrix","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","tmpObj","_isEqual","origValue","currentValue","firstPass","dashedPropertySet","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","addTransform","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","backend","filterBackend","evictCachesForKey","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","imageMarkup","getSvgSrc","origFill","filtered","setSrc","retinaScaling","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","putImageDataTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","ret","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalImageData","originalEl","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","aPostion","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","isNeutralState","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","mainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","_class","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","diff","lighten","darken","exclusion","tint","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","process","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","fontDeclaration","previousFontDeclaration","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","previousGrapheme","skipLeft","getCompleteStyleDeclaration","info","previousBox","__lineHeights","maxHeight","currentCharHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","_hasStyleChanged","_renderChar","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","prevStyle","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","CACHE_FONT_SIZE","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylesCount","foundStyle","canBeSwapped","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","loc","get2DCursorLocation","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","setSelectionStyles","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","clearContextTop","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","lineOffset","realLineHeight","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","styleProps","fillStyles","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","words","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","setObjectScaleOverridden","tw","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromString","assertSize","alloc","checked","isEncoding","byteLength","actual","fromArrayLike","byteOffset","isBuffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","dir","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","leadSurrogate","byteArray","lo","toByteArray","INSPECT_MAX_BYTES","foo","subarray","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","eval","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","wrapperForImpl","wrapperSymbol","implSymbol","tryWrapperForImpl","tryImplForWrapper","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_own_property_descriptor__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_own_property_descriptor___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property___default","__WEBPACK_IMPORTED_MODULE_5_babel_runtime_core_js_object_get_own_property_names__","__WEBPACK_IMPORTED_MODULE_5_babel_runtime_core_js_object_get_own_property_names___default","mixin","iterInternalSymbol","originalModule","webpackPolyfill","children","TO_STRING_TAG","DOMIterables","addToUnscopables","step","iterated","_t","_k","Arguments","done","descriptor","defineProperties","$at","TO_STRING","getIterator","iterFn","classof","getIteratorMethod","ARG","tryGet","callee","$getPrototypeOf","DESCRIPTORS","META","$fails","wks","wksDefine","enumKeys","_create","gOPNExt","$GOPD","$DP","$JSON","_stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","D","protoDesc","wrap","sym","isSymbol","iterator","$defineProperty","$defineProperties","$create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","fastKey","getWeak","onFreeze","meta","NEED","symbols","$Object","desc","skippedModels","valpha","newArr","zeroArray","hashedKeys","hashedModelKeys","limiters","freeze","roundTo","places","roundToPlace","getset","channel","modifier","maxfn","assertArray","percentString","unitArray","unitObject","saturationl","saturationv","wblack","rgbNumber","lum","chan","color2","lum1","lum2","level","contrastRatio","dark","light","negate","saturate","desaturate","whiten","blacken","opaquer","mix","mixinColor","color1","w1","w2","newAlpha","raw","clamp","hexDouble","colorNames","swizzle","reverseNames","cs","hexAlpha","abbr","rgba","per","i2","hsla","hwba","isArrayish","wrapRaw","wrappedFn","conversion","wrapRounded","conversions","route","fromModel","routes","toModel","buildGraph","graph","models","deriveBFS","queue","adjacents","adjacent","link","wrapConversion","cur","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","_v","click","esExports"],"mappings":"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","file":"vue-sign-canvas.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vueSignCanvas\"] = factory();\n\telse\n\t\troot[\"vueSignCanvas\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vueSignCanvas\"] = factory();\n\telse\n\t\troot[\"vueSignCanvas\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 44);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store = __webpack_require__(22)('wks');\nvar uid = __webpack_require__(14);\nvar Symbol = __webpack_require__(1).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(10);\nvar IE8_DOM_DEFINE = __webpack_require__(30);\nvar toPrimitive = __webpack_require__(17);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(4) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(8)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(33);\nvar defined = __webpack_require__(19);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(3);\nvar createDesc = __webpack_require__(12);\nmodule.exports = __webpack_require__(4) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(1);\nvar core = __webpack_require__(0);\nvar ctx = __webpack_require__(52);\nvar hide = __webpack_require__(7);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(32);\nvar enumBugKeys = __webpack_require__(23);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(11);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(22)('keys');\nvar uid = __webpack_require__(14);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(1);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(19);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = true;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(3).f;\nvar has = __webpack_require__(5);\nvar TAG = __webpack_require__(2)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(9);\nvar core = __webpack_require__(0);\nvar fails = __webpack_require__(8);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(1);\nvar core = __webpack_require__(0);\nvar LIBRARY = __webpack_require__(26);\nvar wksExt = __webpack_require__(38);\nvar defineProperty = __webpack_require__(3).f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(4) && !__webpack_require__(8)(function () {\n  return Object.defineProperty(__webpack_require__(31)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\nvar document = __webpack_require__(1).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(5);\nvar toIObject = __webpack_require__(6);\nvar arrayIndexOf = __webpack_require__(55)(false);\nvar IE_PROTO = __webpack_require__(21)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(18);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY = __webpack_require__(26);\nvar $export = __webpack_require__(9);\nvar redefine = __webpack_require__(35);\nvar hide = __webpack_require__(7);\nvar has = __webpack_require__(5);\nvar Iterators = __webpack_require__(16);\nvar $iterCreate = __webpack_require__(73);\nvar setToStringTag = __webpack_require__(27);\nvar getPrototypeOf = __webpack_require__(37);\nvar ITERATOR = __webpack_require__(2)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = (!BUGGY && $native) || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(7);\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(10);\nvar dPs = __webpack_require__(74);\nvar enumBugKeys = __webpack_require__(23);\nvar IE_PROTO = __webpack_require__(21)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(31)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(75).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(5);\nvar toObject = __webpack_require__(25);\nvar IE_PROTO = __webpack_require__(21)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.f = __webpack_require__(2);\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(6);\nvar gOPN = __webpack_require__(40).f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(32);\nvar hiddenKeys = __webpack_require__(23).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pIE = __webpack_require__(15);\nvar createDesc = __webpack_require__(12);\nvar toIObject = __webpack_require__(6);\nvar toPrimitive = __webpack_require__(17);\nvar has = __webpack_require__(5);\nvar IE8_DOM_DEFINE = __webpack_require__(30);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(4) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar cssKeywords = __webpack_require__(42);\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar v;\n\n\tif (max === 0) {\n\t\ts = 0;\n\t} else {\n\t\ts = (delta / max * 1000) / 10;\n\t}\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tv = ((max / 255) * 1000) / 10;\n\n\treturn [h, s, v];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__App_vue__ = __webpack_require__(45);\n// import VueSignature from './components/Hello.vue'\n// export default VueSignature\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__App_vue__[\"a\" /* default */]);\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_dce02452_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(109);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(46)\n}\nvar normalizeComponent = __webpack_require__(47)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-dce02452\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_dce02452_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_fabric__ = __webpack_require__(58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_fabric___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_fabric__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_color__ = __webpack_require__(103);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_color___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_color__);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'vueSignCanvas',\n  props: ['options'],\n  data: function data() {\n    return {\n      __canvas: null\n    };\n  },\n  methods: {\n    save: function save() {\n      this.$emit('result', this.__canvas.toDataURL('png'));\n    },\n    clear: function clear() {\n      this.$emit('clear');\n      this.__canvas.clear();\n    },\n    init: function init() {\n      var canvas = this.__canvas;\n      var newOptions = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default()({}, {\n        width: window.screen.availWidth,\n        height: window.screen.availHeight,\n        brushColor: '#f00',\n        brushWidth: 4\n      }, this.options);\n\n      canvas.setWidth(newOptions.width);\n      canvas.setHeight(newOptions.height);\n\n      if (canvas.freeDrawingBrush) {\n        canvas.freeDrawingBrush.color = newOptions.brushColor;\n        canvas.freeDrawingBrush.width = newOptions.brushWidth;\n        if (newOptions.shadowEnable) {\n          canvas.freeDrawingBrush.shadow = new __WEBPACK_IMPORTED_MODULE_1_fabric__[\"fabric\"].Shadow({\n            blur: parseInt(newOptions.shadowWidth, 10) || 0,\n            offsetX: 0,\n            offsetY: 0,\n            affectStroke: true,\n            color: newOptions.shadowColor ? newOptions.shadowColor : __WEBPACK_IMPORTED_MODULE_2_color___default()(newOptions.brushColor).fade(0.5).hsl().string()\n          });\n        }\n      }\n    }\n  },\n  watch: {\n    'options': function options(val) {\n      console.log(val);\n      this.init();\n    }\n  },\n  mounted: function mounted() {\n    this.__canvas = new __WEBPACK_IMPORTED_MODULE_1_fabric__[\"fabric\"].Canvas('c', {\n      isDrawingMode: true\n    });\n    __WEBPACK_IMPORTED_MODULE_1_fabric__[\"fabric\"].Object.prototype.transparentCorners = false;\n    this.init();\n  }\n});\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(50), __esModule: true };\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(51);\nmodule.exports = __webpack_require__(0).Object.assign;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(9);\n\n$export($export.S + $export.F, 'Object', { assign: __webpack_require__(54) });\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(53);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = __webpack_require__(13);\nvar gOPS = __webpack_require__(24);\nvar pIE = __webpack_require__(15);\nvar toObject = __webpack_require__(25);\nvar IObject = __webpack_require__(33);\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(8)(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(6);\nvar toLength = __webpack_require__(56);\nvar toAbsoluteIndex = __webpack_require__(57);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(20);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(20);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* build: `node build.js modules=ALL exclude=gestures,accessors minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.0.0-rc.3' };\nif (true) {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = __webpack_require__(64)\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = __webpack_require__(65).implForWrapper;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = __webpack_require__(102).DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\", \"paint-order\",\n  \"instantiated_by_use\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})( true ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text', 'linearGradient', 'radialGradient', 'stop'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})( true ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  klass.fromElement(el, this.createCallback(index, el), this.options);\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    var _options;\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    if (obj instanceof fabric.Image) {\n      _options = obj.parsePreserveAspectRatioAttribute(el);\n    }\n    obj._removeTransformMatrix(_options);\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances, this.elements);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = source[3] * 255;\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})( true ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          offsetX = object.width / 2, offsetY = object.height / 2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n      for (var prop in coords) {\n        if (prop === 'x1' || prop === 'x2') {\n          coords[prop] += this.offsetX - offsetX;\n        }\n        else if (prop === 'y1' || prop === 'y2') {\n          coords[prop] += this.offsetY - offsetY;\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        });\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})( true ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = fabric.util.createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform;\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this.getObjects();\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n          ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : this.width),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : this.height),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n          'width=\"', this.width,\n          '\" height=\"', this.height,\n          '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.lowerCanvasEl = null;\n      this.cacheCanvasEl = null;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = fabric.jsdomImplForWrapper(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = fabric.jsdomImplForWrapper(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return;\n      }\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform, i, len;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:removed\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.rotate(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      removeListener(this.upperCanvasEl, 'doubleclick', this._onDoubleClick);\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      var target;\n      this._handleEvent(e, 'dblclick', target);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this._activeObject;\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n            pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).requestRenderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e);\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', this._currentTransform ? null : target);\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.width,\n          origHeight = this.height,\n          scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive,\n          originalSkipOffScreen = this.skipOffscreen,\n          needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n\n      this.viewportTransform = newVp;\n      this.skipOffscreen = false;\n      // setting interactive to false avoid exporting controls\n      this.interactive = false;\n      if (needsResize) {\n        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n      }\n      // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\n      // from setDimensions\n      this.renderAll();\n      var data = this.__toDataURL(format, quality, cropping);\n      this.interactive = originalInteractive;\n      this.skipOffscreen = originalSkipOffScreen;\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.requestRenderAll()\n      if (needsResize) {\n        this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n      }\n      this.renderAll();\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n        ? canvasEl.toDataURL('image/' + format, quality)\n        : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered coner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determins if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var target = this.canvas._currentTransform.target,\n            action = this.canvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty()) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx, this);\n      this._setFillStyles(ctx, this);\n      this._render(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decoompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        left: this.left,\n        top: this.top\n      };\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})( true ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = theta ? Math.sin(theta) : 0,\n          cosTh = theta ? Math.cos(theta) : 1,\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.flipX + sep + this.flipY +\n        sep + this.width + sep + this.height;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var center = this.getCenterPoint(),\n          matrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style style properties for the span a boolean to skip shadow filter output\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ',\n          strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = style.fontFamily ? 'font-family: ' + style.fontFamily.replace(/\"/g, '\\'') + term : '',\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style);\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      var angle = this.angle,\n          skewX = (this.skewX % 360),\n          skewY = (this.skewY % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 0 0) ' : '',\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 0)' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = this.calcLinePoints();\n      markup.push(\n        '<line ', this.getSvgId(),\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        markup.push(\n          '<circle ', this.getSvgId(),\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(extend(parsedAttributes, options)));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n        .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n            .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n        'points=\"', points,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), '\"',\n        this.addPaintOrder(),\n        '/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push(\n        '<rect ', this.getSvgId(),\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          markup = this._createBaseSVGMarkup();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n        'points=\"', points.join(''),\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        ' ', this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      markup.push(\n        '<path ', this.getSvgId(),\n        'd=\"', path,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), addTransform,\n        this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        i = this._objects.length;\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        objsToObject = this.getObjects().map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = obj.group.includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects;\n      this._objects = [];\n      var options = this.toObject();\n      var newGroup = new fabric.Group([]);\n      delete options.objects;\n      newGroup.set(options);\n      newGroup.type = 'group';\n      objects.forEach(function(object) {\n        object.group = newGroup;\n        object.canvas.remove(object);\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * key used to retrieve the texture representing this image\n     * since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\n      var imageMarkup = ['\\t<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x, '\" y=\"', y,\n        '\" style=\"', this.getSvgStyles(),\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this.width,\n        '\" height=\"', this.height,\n        '\"></image>\\n'];\n      if (this.paintFirst === 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n        return element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : 1,\n          minimumScale = this.minimumScaleTrigger,\n          scaleX = this.scaleX * retinaScaling,\n          scaleY = this.scaleY * retinaScaling,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey : (this.cacheKey + '_filtered'),\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      filter.scaleX = scaleX;\n      filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter; });\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        this._element.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving === false && this.resizeFilter && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    _renderFill: function(ctx) {\n      var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\n          x = -w / 2, y = -h / 2, elementToDraw = this._element;\n      elementToDraw && ctx.drawImage(elementToDraw,\n        this.cropX * this._filterScalingX,\n        this.cropY * this._filterScalingY,\n        sW,\n        sH,\n        x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n          ? this.getElement().width || 0\n          : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n          ? this.getElement().height || 0\n          : 0);\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          var image = new fabric.Image(img, object);\n          callback(image);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})( true ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = { premultipliedAlpha: false },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * The same as the applyFilter method but with additional logging of WebGL\n     * errors.\n     */\n    applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n      // The following code is useful when debugging a specific issue but adds ~10x slowdown.\n      var gl = this.gl;\n      var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n      var glError = gl.getError();\n      if (glError !== gl.NO_ERROR) {\n        var errorString = this.glErrorToString(gl, glError);\n        var error = new Error('WebGL Error ' + errorString);\n        error.glErrorCode = glError;\n        throw error;\n      }\n      return ret;\n    },\n\n    glErrorToString: function(context, errorCode) {\n      if (!context) {\n        return 'Context undefined for error code: ' + errorCode;\n      }\n      else if (typeof errorCode !== 'number') {\n        return 'Error code is not a number';\n      }\n      switch (errorCode) {\n        case context.NO_ERROR:\n          return 'NO_ERROR';\n        case context.INVALID_ENUM:\n          return 'INVALID_ENUM';\n        case context.INVALID_VALUE:\n          return 'INVALID_VALUE';\n        case context.INVALID_OPERATION:\n          return 'INVALID_OPERATION';\n        case context.INVALID_FRAMEBUFFER_OPERATION:\n          return 'INVALID_FRAMEBUFFER_OPERATION';\n        case context.OUT_OF_MEMORY:\n          return 'OUT_OF_MEMORY';\n        case context.CONTEXT_LOST_WEBGL:\n          return 'CONTEXT_LOST_WEBGL';\n        default:\n          return 'UNKNOWN_ERROR';\n      }\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl;\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      var gpuInfo = { renderer: '', vendor: '' };\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPostion;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Intentionally left blank, to be overridden in custom filters\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    return false;\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      if (options.passes > 1 && this.isNeutralState(options)) {\n        // avoid doing something that we do not need\n        return;\n      }\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else if (!this.isNeutralState()) {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Intentionally left blank, to be overridden in custom filters\n     * @param {Object} options\n     **/\n    isNeutralState: function(/* options */) {\n      var _class = filters.ColorMatrix;\n      for (var i = 20; i--;) {\n        if (this.matrix[i] !== _class.prototype.matrix[i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (!this.invert) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.blocksize === 1) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})( true ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb *= uColor.rgb;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      screen: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb = 1.0 - (1.0 - color.rgb) * (1.0 - uColor.rgb);\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      add: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}',\n      diff: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n' +\n      '}',\n      subtract: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb -= uColor.rgb;\\n' +\n        '}',\n      lighten: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      darken: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      exclusion: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n' +\n        '}',\n      overlay: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'if (uColor.r < 0.5) {\\n' +\n            'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n          '}\\n' +\n          'if (uColor.g < 0.5) {\\n' +\n            'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n          '}\\n' +\n          'if (uColor.b < 0.5) {\\n' +\n            'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n          '}\\n' +\n        '}',\n      tint: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'attribute vec2 aTexCoord;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aTexCoord;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aTexCoord, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = options.imageData.width,\n          height = options.imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = document.createElement('canvas');\n      }\n      canvas1 = resources.blendImage;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      context = canvas1.getContext('2d');\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        if (options.passes > 1 && this.isNeutralState(options)) {\n          // avoid doing something that we do not need\n          return;\n        }\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else if (!this.isNeutralState(options)) {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function(options) {\n      var scaleX = options.scaleX || this.scaleX,\n          scaleY = options.scaleY || this.scaleY;\n      return scaleX === 1 && scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = document.createElement('canvas');\n        resources.blurLayer2 = document.createElement('canvas');\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = Math.cos(rad), sin = Math.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      fabric.Image.filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})( true ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone,\n      MIN_TEXT_WIDTH = 2,\n      CACHE_FONT_SIZE = 200;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type String\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type String\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type String\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Array of properties that define a style unit.\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar]) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char]) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple]) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (!width || !previousWidth || !coupleWidth) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (!width) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (!previousWidth && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && !coupleWidth) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n        // try to fix a MS browsers oddity\n        if (kernedWidth > width) {\n          var diff = kernedWidth - width;\n          fontCache[_char] = kernedWidth;\n          fontCache[couple] += diff;\n          width = kernedWidth;\n        }\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * return height of char in fontSize for a character at lineIndex, charIndex\n     * @param {Number} l line Index\n     * @param {Number} c char index\n     * @return {Number} fontSize of that character\n     */\n    getHeightOfChar: function(l, c) {\n      return this.getValueOfPropertyAt(l, c, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [previousChar] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, previousGrapheme, skipLeft) {\n      var charStyle = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevCharStyle = previousGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, charStyle, previousGrapheme, prevCharStyle),\n          kernedWidth = info.kernedWidth, width = info.width;\n\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n        kernedWidth += this._getWidthOfCharSpacing();\n      }\n      var box = {\n        width: width,\n        left: 0,\n        height: charStyle.fontSize,\n        kernedWidth: kernedWidth,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of chosen line\n     * height of line is based mainly on fontSize\n     * @private\n     * @param {Number} lineIndex index of the line to calculate\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this.getHeightOfChar(lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * calculate text box height\n     * @private\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender;\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {Number} LineIndex\n     * @param {Number} charIndex\n     * @param {String} property\n\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex),\n          styleDecoration = charStyle && typeof charStyle[property] !== 'undefined';\n      return styleDecoration ? charStyle[property] : this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine,\n          lineLeftOffset,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n              boxWidth,\n              this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n          boxWidth,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this;\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + style.fontFamily + '\"') : style.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.18 + text._fontSizeFraction)) / text.lineHeight\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})( true ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, foundStyle = false, style,\n          canBeSwapped = true, graphemeCount = 0;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          stylesCount++;\n          if (!foundStyle) {\n            style = obj[p1][p2][property];\n            foundStyle = true;\n          }\n          else if (obj[p1][p2][property] !== style) {\n            canBeSwapped = false;\n          }\n          if (obj[p1][p2][property] === this[property]) {\n            delete obj[p1][p2][property];\n          }\n          if (Object.keys(obj[p1][p2]).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (canBeSwapped && stylesCount === graphemeCount) {\n        this[property] = style;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      for (var i = 0; i < cursorPosition.lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(cursorPosition.lineIndex);\n      var bound = this.__charBounds[cursorPosition.lineIndex][cursorPosition.charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset;\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function(options) {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      fabric.Object.prototype.onDeselect.call(this, options);\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._textLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._textLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this._removeExtraneousStyles();\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"',\n          textDecoration = this.getSvgTextDecoration(this);\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n        style, '>\\n',\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >\\n',\n        textAndBg.textSpans.join(''),\n        '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var styleProps = this.getSvgSpanStyles(styleDecl, _char !== _char.trim()),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '';\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ',\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth) {\n      var lineWidth        = 0,\n          graphemeLines    = [],\n          line             = [],\n          // spaces in different languges?\n          words            = _line.split(this._reSpaceAndTab),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n\n        if (!lineJustStarted) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})( true ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59).Buffer))\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(61)\nvar ieee754 = __webpack_require__(62)\nvar isArray = __webpack_require__(63)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(60)))\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 65 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(81);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_own_property_descriptor__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_own_property_descriptor___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_own_property_descriptor__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(99);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_core_js_object_get_own_property_names__);\n\n\n\n\n\n\n\n\nmodule.exports.mixin = function mixin(target, source) {\n  var keys = __WEBPACK_IMPORTED_MODULE_5_babel_runtime_core_js_object_get_own_property_names___default()(source);\n  for (var i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_object_define_property___default()(target, keys[i], __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_get_own_property_descriptor___default()(source, keys[i]));\n  }\n};\n\nvar wrapperSymbol = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol___default()(\"wrapper\");\nvar implSymbol = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol___default()(\"impl\");\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n};\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n};\n\nfunction tryWrapperForImpl(impl) {\n  var wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n};\n\nfunction tryImplForWrapper(wrapper) {\n  var impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n};\n\nvar iterInternalSymbol = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_symbol___default()(\"internal\");\nvar IteratorPrototype = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default()(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default()(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()([])));\n\nmodule.exports.wrapperSymbol = wrapperSymbol;\nmodule.exports.implSymbol = implSymbol;\nmodule.exports.wrapperForImpl = wrapperForImpl;\nmodule.exports.implForWrapper = implForWrapper;\nmodule.exports.tryWrapperForImpl = tryWrapperForImpl;\nmodule.exports.tryImplForWrapper = tryImplForWrapper;\nmodule.exports.iterInternalSymbol = iterInternalSymbol;\nmodule.exports.IteratorPrototype = IteratorPrototype;\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(66)(module)))\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(68), __esModule: true };\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(69);\n__webpack_require__(76);\nmodule.exports = __webpack_require__(78);\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(70);\nvar global = __webpack_require__(1);\nvar hide = __webpack_require__(7);\nvar Iterators = __webpack_require__(16);\nvar TO_STRING_TAG = __webpack_require__(2)('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(71);\nvar step = __webpack_require__(72);\nvar Iterators = __webpack_require__(16);\nvar toIObject = __webpack_require__(6);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(34)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\nmodule.exports = function () { /* empty */ };\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create = __webpack_require__(36);\nvar descriptor = __webpack_require__(12);\nvar setToStringTag = __webpack_require__(27);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(7)(IteratorPrototype, __webpack_require__(2)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(3);\nvar anObject = __webpack_require__(10);\nvar getKeys = __webpack_require__(13);\n\nmodule.exports = __webpack_require__(4) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar document = __webpack_require__(1).document;\nmodule.exports = document && document.documentElement;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at = __webpack_require__(77)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(34)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(20);\nvar defined = __webpack_require__(19);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(10);\nvar get = __webpack_require__(79);\nmodule.exports = __webpack_require__(0).getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(80);\nvar ITERATOR = __webpack_require__(2)('iterator');\nvar Iterators = __webpack_require__(16);\nmodule.exports = __webpack_require__(0).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(18);\nvar TAG = __webpack_require__(2)('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(82), __esModule: true };\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(83);\nmodule.exports = __webpack_require__(0).Object.getPrototypeOf;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = __webpack_require__(25);\nvar $getPrototypeOf = __webpack_require__(37);\n\n__webpack_require__(28)('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(85), __esModule: true };\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(86);\n__webpack_require__(90);\n__webpack_require__(91);\n__webpack_require__(92);\nmodule.exports = __webpack_require__(0).Symbol;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__(1);\nvar has = __webpack_require__(5);\nvar DESCRIPTORS = __webpack_require__(4);\nvar $export = __webpack_require__(9);\nvar redefine = __webpack_require__(35);\nvar META = __webpack_require__(87).KEY;\nvar $fails = __webpack_require__(8);\nvar shared = __webpack_require__(22);\nvar setToStringTag = __webpack_require__(27);\nvar uid = __webpack_require__(14);\nvar wks = __webpack_require__(2);\nvar wksExt = __webpack_require__(38);\nvar wksDefine = __webpack_require__(29);\nvar enumKeys = __webpack_require__(88);\nvar isArray = __webpack_require__(89);\nvar anObject = __webpack_require__(10);\nvar isObject = __webpack_require__(11);\nvar toIObject = __webpack_require__(6);\nvar toPrimitive = __webpack_require__(17);\nvar createDesc = __webpack_require__(12);\nvar _create = __webpack_require__(36);\nvar gOPNExt = __webpack_require__(39);\nvar $GOPD = __webpack_require__(41);\nvar $DP = __webpack_require__(3);\nvar $keys = __webpack_require__(13);\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__(40).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(15).f = $propertyIsEnumerable;\n  __webpack_require__(24).f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__(26)) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(7)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar META = __webpack_require__(14)('meta');\nvar isObject = __webpack_require__(11);\nvar has = __webpack_require__(5);\nvar setDesc = __webpack_require__(3).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(8)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(13);\nvar gOPS = __webpack_require__(24);\nvar pIE = __webpack_require__(15);\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(18);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(29)('asyncIterator');\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(29)('observable');\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(94), __esModule: true };\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(95);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = __webpack_require__(6);\nvar $getOwnPropertyDescriptor = __webpack_require__(41).f;\n\n__webpack_require__(28)('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(97), __esModule: true };\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(98);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(9);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(4), 'Object', { defineProperty: __webpack_require__(3).f });\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(100), __esModule: true };\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(101);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(28)('getOwnPropertyNames', function () {\n  return __webpack_require__(39).f;\n});\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar colorString = __webpack_require__(104);\nvar convert = __webpack_require__(107);\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (!obj) {\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar colorNames = __webpack_require__(42);\nvar swizzle = __webpack_require__(105);\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isArrayish = __webpack_require__(106);\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(43);\nvar route = __webpack_require__(108);\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(43);\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vueSignCanvas\"},[_c('canvas',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"c\"}}),_vm._v(\" \"),_c('div',{staticClass:\"vueSignCanvas__btn\"},[_c('button',{on:{\"click\":_vm.clear}},[_vm._v(\"清空\")]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.save}},[_vm._v(\"保存\")])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue-sign-canvas.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 289599a81a4aae1e1994","var core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = 0\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 1\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks.js\n// module id = 2\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = 3\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = 4\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = 5\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-iobject.js\n// module id = 6\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = 7\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = 8\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = 9\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 10\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = 11\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = 12\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys.js\n// module id = 13\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_uid.js\n// module id = 14\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-pie.js\n// module id = 15\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iterators.js\n// module id = 16\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = 17\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_cof.js\n// module id = 18\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_defined.js\n// module id = 19\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-integer.js\n// module id = 20\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared-key.js\n// module id = 21\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared.js\n// module id = 22\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = 23\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gops.js\n// module id = 24\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-object.js\n// module id = 25\n// module chunks = 0","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_library.js\n// module id = 26\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = 27\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = 28\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks-define.js\n// module id = 29\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = 30\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = 31\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = 32\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iobject.js\n// module id = 33\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = (!BUGGY && $native) || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-define.js\n// module id = 34\n// module chunks = 0","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine.js\n// module id = 35\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-create.js\n// module id = 36\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gpo.js\n// module id = 37\n// module chunks = 0","exports.f = require('./_wks');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks-ext.js\n// module id = 38\n// module chunks = 0","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = 39\n// module chunks = 0","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = 40\n// module chunks = 0","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopd.js\n// module id = 41\n// module chunks = 0","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.1.1.3@color-name/index.js\n// module id = 42\n// module chunks = 0","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar v;\n\n\tif (max === 0) {\n\t\ts = 0;\n\t} else {\n\t\ts = (delta / max * 1000) / 10;\n\t}\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tv = ((max / 255) * 1000) / 10;\n\n\treturn [h, s, v];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.1.9.1@color-convert/conversions.js\n// module id = 43\n// module chunks = 0","// import VueSignature from './components/Hello.vue'\n// export default VueSignature\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport App from './App.vue'\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-dce02452\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-dce02452\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-dce02452\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 45\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 47\n// module chunks = 0","<template>\n  <div class=\"vueSignCanvas\">\n    <canvas id=\"c\" style=\"width: 100%;height: 100%\"></canvas>\n    <div class=\"vueSignCanvas__btn\">\n      <button @click=\"clear\">清空</button>\n      <button @click=\"save\">保存</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fabric } from 'fabric'\nimport Color from 'color'\nexport default {\n  name: 'vueSignCanvas',\n  props: ['options'],\n  data: () => {\n    return {\n      __canvas: null\n    }\n  },\n  methods: {\n    save: function () {\n      this.$emit('result', this.__canvas.toDataURL('png'))\n    },\n    clear: function () {\n      this.$emit('clear')\n      this.__canvas.clear()\n    },\n    init: function () {\n      var canvas = this.__canvas\n      var newOptions = Object.assign({}, {\n        width: window.screen.availWidth,\n        height: window.screen.availHeight,\n        brushColor: '#f00',\n        brushWidth: 4\n      }, this.options)\n\n      canvas.setWidth(newOptions.width)\n      canvas.setHeight(newOptions.height)\n\n      if (canvas.freeDrawingBrush) {\n        canvas.freeDrawingBrush.color = newOptions.brushColor\n        canvas.freeDrawingBrush.width = newOptions.brushWidth\n        if (newOptions.shadowEnable) {\n          canvas.freeDrawingBrush.shadow = new fabric.Shadow({\n            blur: parseInt(newOptions.shadowWidth, 10) || 0,\n            offsetX: 0,\n            offsetY: 0,\n            affectStroke: true,\n            color: newOptions.shadowColor ? newOptions.shadowColor : Color(newOptions.brushColor).fade(0.5).hsl().string()\n          })\n        }\n      }\n    }\n  },\n  watch: {\n    'options': function (val) {\n      console.log(val)\n      this.init()\n    }\n  },\n  mounted() {\n    this.__canvas = new fabric.Canvas('c', {\n      isDrawingMode: true\n    })\n    fabric.Object.prototype.transparentCorners = false\n    this.init()\n  }\n}\n</script>\n\n<style scoped>\n.vueSignCanvas {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n.vueSignCanvas__btn {\n  position: absolute;\n  top: 0;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/assign.js\n// module id = 49\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/assign.js\n// module id = 50\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.assign.js\n// module id = 51\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = 52\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = 53\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-assign.js\n// module id = 54\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-includes.js\n// module id = 55\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-length.js\n// module id = 56\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = 57\n// module chunks = 0","/* build: `node build.js modules=ALL exclude=gestures,accessors minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.0.0-rc.3' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require('jsdom')\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = require('xmldom').DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\", \"paint-order\",\n  \"instantiated_by_use\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text', 'linearGradient', 'radialGradient', 'stop'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  klass.fromElement(el, this.createCallback(index, el), this.options);\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    var _options;\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    if (obj instanceof fabric.Image) {\n      _options = obj.parsePreserveAspectRatioAttribute(el);\n    }\n    obj._removeTransformMatrix(_options);\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances, this.elements);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = source[3] * 255;\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          offsetX = object.width / 2, offsetY = object.height / 2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n      for (var prop in coords) {\n        if (prop === 'x1' || prop === 'x2') {\n          coords[prop] += this.offsetX - offsetX;\n        }\n        else if (prop === 'y1' || prop === 'y2') {\n          coords[prop] += this.offsetY - offsetY;\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        });\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = fabric.util.createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform;\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this.getObjects();\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n          ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : this.width),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : this.height),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n          'width=\"', this.width,\n          '\" height=\"', this.height,\n          '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.lowerCanvasEl = null;\n      this.cacheCanvasEl = null;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = fabric.jsdomImplForWrapper(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = fabric.jsdomImplForWrapper(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return;\n      }\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform, i, len;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:removed\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.rotate(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      removeListener(this.upperCanvasEl, 'doubleclick', this._onDoubleClick);\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      var target;\n      this._handleEvent(e, 'dblclick', target);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this._activeObject;\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n            pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).requestRenderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e);\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', this._currentTransform ? null : target);\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.width,\n          origHeight = this.height,\n          scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive,\n          originalSkipOffScreen = this.skipOffscreen,\n          needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n\n      this.viewportTransform = newVp;\n      this.skipOffscreen = false;\n      // setting interactive to false avoid exporting controls\n      this.interactive = false;\n      if (needsResize) {\n        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n      }\n      // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\n      // from setDimensions\n      this.renderAll();\n      var data = this.__toDataURL(format, quality, cropping);\n      this.interactive = originalInteractive;\n      this.skipOffscreen = originalSkipOffScreen;\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.requestRenderAll()\n      if (needsResize) {\n        this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n      }\n      this.renderAll();\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n        ? canvasEl.toDataURL('image/' + format, quality)\n        : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered coner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determins if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var target = this.canvas._currentTransform.target,\n            action = this.canvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty()) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx, this);\n      this._setFillStyles(ctx, this);\n      this._render(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decoompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        left: this.left,\n        top: this.top\n      };\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = theta ? Math.sin(theta) : 0,\n          cosTh = theta ? Math.cos(theta) : 1,\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.flipX + sep + this.flipY +\n        sep + this.width + sep + this.height;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var center = this.getCenterPoint(),\n          matrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style style properties for the span a boolean to skip shadow filter output\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ',\n          strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = style.fontFamily ? 'font-family: ' + style.fontFamily.replace(/\"/g, '\\'') + term : '',\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style);\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      var angle = this.angle,\n          skewX = (this.skewX % 360),\n          skewY = (this.skewY % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 0 0) ' : '',\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 0)' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = this.calcLinePoints();\n      markup.push(\n        '<line ', this.getSvgId(),\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        markup.push(\n          '<circle ', this.getSvgId(),\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(extend(parsedAttributes, options)));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n        .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n            .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n        'points=\"', points,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), '\"',\n        this.addPaintOrder(),\n        '/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push(\n        '<rect ', this.getSvgId(),\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          markup = this._createBaseSVGMarkup();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n        'points=\"', points.join(''),\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        ' ', this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      markup.push(\n        '<path ', this.getSvgId(),\n        'd=\"', path,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), addTransform,\n        this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        i = this._objects.length;\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        objsToObject = this.getObjects().map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = obj.group.includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects;\n      this._objects = [];\n      var options = this.toObject();\n      var newGroup = new fabric.Group([]);\n      delete options.objects;\n      newGroup.set(options);\n      newGroup.type = 'group';\n      objects.forEach(function(object) {\n        object.group = newGroup;\n        object.canvas.remove(object);\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * key used to retrieve the texture representing this image\n     * since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\n      var imageMarkup = ['\\t<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x, '\" y=\"', y,\n        '\" style=\"', this.getSvgStyles(),\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this.width,\n        '\" height=\"', this.height,\n        '\"></image>\\n'];\n      if (this.paintFirst === 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n        return element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : 1,\n          minimumScale = this.minimumScaleTrigger,\n          scaleX = this.scaleX * retinaScaling,\n          scaleY = this.scaleY * retinaScaling,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey : (this.cacheKey + '_filtered'),\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      filter.scaleX = scaleX;\n      filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter; });\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        this._element.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving === false && this.resizeFilter && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    _renderFill: function(ctx) {\n      var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\n          x = -w / 2, y = -h / 2, elementToDraw = this._element;\n      elementToDraw && ctx.drawImage(elementToDraw,\n        this.cropX * this._filterScalingX,\n        this.cropY * this._filterScalingY,\n        sW,\n        sH,\n        x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n          ? this.getElement().width || 0\n          : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n          ? this.getElement().height || 0\n          : 0);\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          var image = new fabric.Image(img, object);\n          callback(image);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = { premultipliedAlpha: false },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * The same as the applyFilter method but with additional logging of WebGL\n     * errors.\n     */\n    applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n      // The following code is useful when debugging a specific issue but adds ~10x slowdown.\n      var gl = this.gl;\n      var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n      var glError = gl.getError();\n      if (glError !== gl.NO_ERROR) {\n        var errorString = this.glErrorToString(gl, glError);\n        var error = new Error('WebGL Error ' + errorString);\n        error.glErrorCode = glError;\n        throw error;\n      }\n      return ret;\n    },\n\n    glErrorToString: function(context, errorCode) {\n      if (!context) {\n        return 'Context undefined for error code: ' + errorCode;\n      }\n      else if (typeof errorCode !== 'number') {\n        return 'Error code is not a number';\n      }\n      switch (errorCode) {\n        case context.NO_ERROR:\n          return 'NO_ERROR';\n        case context.INVALID_ENUM:\n          return 'INVALID_ENUM';\n        case context.INVALID_VALUE:\n          return 'INVALID_VALUE';\n        case context.INVALID_OPERATION:\n          return 'INVALID_OPERATION';\n        case context.INVALID_FRAMEBUFFER_OPERATION:\n          return 'INVALID_FRAMEBUFFER_OPERATION';\n        case context.OUT_OF_MEMORY:\n          return 'OUT_OF_MEMORY';\n        case context.CONTEXT_LOST_WEBGL:\n          return 'CONTEXT_LOST_WEBGL';\n        default:\n          return 'UNKNOWN_ERROR';\n      }\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl;\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      var gpuInfo = { renderer: '', vendor: '' };\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPostion;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Intentionally left blank, to be overridden in custom filters\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    return false;\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      if (options.passes > 1 && this.isNeutralState(options)) {\n        // avoid doing something that we do not need\n        return;\n      }\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else if (!this.isNeutralState()) {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Intentionally left blank, to be overridden in custom filters\n     * @param {Object} options\n     **/\n    isNeutralState: function(/* options */) {\n      var _class = filters.ColorMatrix;\n      for (var i = 20; i--;) {\n        if (this.matrix[i] !== _class.prototype.matrix[i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (!this.invert) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.blocksize === 1) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb *= uColor.rgb;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      screen: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb = 1.0 - (1.0 - color.rgb) * (1.0 - uColor.rgb);\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      add: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}',\n      diff: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n' +\n      '}',\n      subtract: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb -= uColor.rgb;\\n' +\n        '}',\n      lighten: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      darken: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      exclusion: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n' +\n        '}',\n      overlay: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'if (uColor.r < 0.5) {\\n' +\n            'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n          '}\\n' +\n          'if (uColor.g < 0.5) {\\n' +\n            'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n          '}\\n' +\n          'if (uColor.b < 0.5) {\\n' +\n            'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n          '}\\n' +\n        '}',\n      tint: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'attribute vec2 aTexCoord;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aTexCoord;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aTexCoord, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = options.imageData.width,\n          height = options.imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = document.createElement('canvas');\n      }\n      canvas1 = resources.blendImage;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      context = canvas1.getContext('2d');\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        if (options.passes > 1 && this.isNeutralState(options)) {\n          // avoid doing something that we do not need\n          return;\n        }\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else if (!this.isNeutralState(options)) {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function(options) {\n      var scaleX = options.scaleX || this.scaleX,\n          scaleY = options.scaleY || this.scaleY;\n      return scaleX === 1 && scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = document.createElement('canvas');\n        resources.blurLayer2 = document.createElement('canvas');\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = Math.cos(rad), sin = Math.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      fabric.Image.filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone,\n      MIN_TEXT_WIDTH = 2,\n      CACHE_FONT_SIZE = 200;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type String\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type String\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type String\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Array of properties that define a style unit.\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar]) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char]) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple]) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (!width || !previousWidth || !coupleWidth) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (!width) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (!previousWidth && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && !coupleWidth) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n        // try to fix a MS browsers oddity\n        if (kernedWidth > width) {\n          var diff = kernedWidth - width;\n          fontCache[_char] = kernedWidth;\n          fontCache[couple] += diff;\n          width = kernedWidth;\n        }\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * return height of char in fontSize for a character at lineIndex, charIndex\n     * @param {Number} l line Index\n     * @param {Number} c char index\n     * @return {Number} fontSize of that character\n     */\n    getHeightOfChar: function(l, c) {\n      return this.getValueOfPropertyAt(l, c, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [previousChar] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, previousGrapheme, skipLeft) {\n      var charStyle = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevCharStyle = previousGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, charStyle, previousGrapheme, prevCharStyle),\n          kernedWidth = info.kernedWidth, width = info.width;\n\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n        kernedWidth += this._getWidthOfCharSpacing();\n      }\n      var box = {\n        width: width,\n        left: 0,\n        height: charStyle.fontSize,\n        kernedWidth: kernedWidth,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of chosen line\n     * height of line is based mainly on fontSize\n     * @private\n     * @param {Number} lineIndex index of the line to calculate\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this.getHeightOfChar(lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * calculate text box height\n     * @private\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender;\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {Number} LineIndex\n     * @param {Number} charIndex\n     * @param {String} property\n\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex),\n          styleDecoration = charStyle && typeof charStyle[property] !== 'undefined';\n      return styleDecoration ? charStyle[property] : this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine,\n          lineLeftOffset,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n              boxWidth,\n              this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n          boxWidth,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this;\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + style.fontFamily + '\"') : style.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.18 + text._fontSizeFraction)) / text.lineHeight\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, foundStyle = false, style,\n          canBeSwapped = true, graphemeCount = 0;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          stylesCount++;\n          if (!foundStyle) {\n            style = obj[p1][p2][property];\n            foundStyle = true;\n          }\n          else if (obj[p1][p2][property] !== style) {\n            canBeSwapped = false;\n          }\n          if (obj[p1][p2][property] === this[property]) {\n            delete obj[p1][p2][property];\n          }\n          if (Object.keys(obj[p1][p2]).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (canBeSwapped && stylesCount === graphemeCount) {\n        this[property] = style;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      for (var i = 0; i < cursorPosition.lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(cursorPosition.lineIndex);\n      var bound = this.__charBounds[cursorPosition.lineIndex][cursorPosition.charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset;\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function(options) {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      fabric.Object.prototype.onDeselect.call(this, options);\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._textLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._textLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this._removeExtraneousStyles();\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"',\n          textDecoration = this.getSvgTextDecoration(this);\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n        style, '>\\n',\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >\\n',\n        textAndBg.textSpans.join(''),\n        '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var styleProps = this.getSvgSpanStyles(styleDecl, _char !== _char.trim()),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '';\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ',\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth) {\n      var lineWidth        = 0,\n          graphemeLines    = [],\n          line             = [],\n          // spaces in different languges?\n          words            = _line.split(this._reSpaceAndTab),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n\n        if (!lineJustStarted) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.0.0-rc.3@fabric/dist/fabric.js\n// module id = 58\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 59\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 60\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 61\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 62\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 63\n// module chunks = 0","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n};\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n};\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n};\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n};\n\nconst iterInternalSymbol = Symbol(\"internal\");\nconst IteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n\nmodule.exports.wrapperSymbol = wrapperSymbol;\nmodule.exports.implSymbol = implSymbol;\nmodule.exports.wrapperForImpl = wrapperForImpl;\nmodule.exports.implForWrapper = implForWrapper;\nmodule.exports.tryWrapperForImpl = tryWrapperForImpl;\nmodule.exports.tryImplForWrapper = tryImplForWrapper;\nmodule.exports.iterInternalSymbol = iterInternalSymbol;\nmodule.exports.IteratorPrototype = IteratorPrototype;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/.9.12.0@jsdom/lib/jsdom/living/generated/utils.js","module.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/harmony-module.js\n// module id = 66\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = 67\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = 68\n// module chunks = 0","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = 69\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = 70\n// module chunks = 0","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 71\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-step.js\n// module id = 72\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-create.js\n// module id = 73\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dps.js\n// module id = 74\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_html.js\n// module id = 75\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = 76\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_string-at.js\n// module id = 77\n// module chunks = 0","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = 78\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 79\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = 80\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-prototype-of.js\n// module id = 81\n// module chunks = 0","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-prototype-of.js\n// module id = 82\n// module chunks = 0","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-prototype-of.js\n// module id = 83\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/symbol.js\n// module id = 84\n// module chunks = 0","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/symbol/index.js\n// module id = 85\n// module chunks = 0","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.symbol.js\n// module id = 86\n// module chunks = 0","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_meta.js\n// module id = 87\n// module chunks = 0","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-keys.js\n// module id = 88\n// module chunks = 0","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array.js\n// module id = 89\n// module chunks = 0","require('./_wks-define')('asyncIterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.symbol.async-iterator.js\n// module id = 91\n// module chunks = 0","require('./_wks-define')('observable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.symbol.observable.js\n// module id = 92\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js\n// module id = 93\n// module chunks = 0","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-descriptor.js\n// module id = 94\n// module chunks = 0","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js\n// module id = 95\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/define-property.js\n// module id = 96\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/define-property.js\n// module id = 97\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = 98\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-names\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-names.js\n// module id = 99\n// module chunks = 0","require('../../modules/es6.object.get-own-property-names');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-names.js\n// module id = 100\n// module chunks = 0","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-names.js\n// module id = 101\n// module chunks = 0","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (!obj) {\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.2.0.1@color/index.js\n// module id = 103\n// module chunks = 0","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.1.5.2@color-string/index.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.0.2.2@simple-swizzle/index.js\n// module id = 105\n// module chunks = 0","'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.0.3.1@is-arrayish/index.js\n// module id = 106\n// module chunks = 0","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.1.9.1@color-convert/index.js\n// module id = 107\n// module chunks = 0","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/.1.9.1@color-convert/route.js\n// module id = 108\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vueSignCanvas\"},[_c('canvas',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"c\"}}),_vm._v(\" \"),_c('div',{staticClass:\"vueSignCanvas__btn\"},[_c('button',{on:{\"click\":_vm.clear}},[_vm._v(\"清空\")]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.save}},[_vm._v(\"保存\")])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-dce02452\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 109\n// module chunks = 0"],"sourceRoot":""}